<!DOCTYPE html>
<html>
<head>
<title>GridTravel</title>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>

<script type="text/javascript" src="https://static.codehs.com/gulp/b33dc8b03f0ee30ab3f5b2862a1858ec8158f993/chs-js-lib/chs.js"></script>


<style>
canvas {
    border: 1px solid black;
    display: inline-block;
    vertical-align: top;
}

pre {
    border: 1px solid black;
    display: inline-block;
    width: 400px;
    height: 500px;
    background-color: #F5F5F5;
}
</style>

</head>

<body>
<h1>GridTravel</h1>



<canvas
width="400"
height="500"
class="codehs-editor-canvas"></canvas>
<pre id="console"></pre>

<script>
window.onload = function() {

    var scale = 40;
var startX = 0;
var startY = 0;
var playerColor = Randomizer.nextColor();
var map = [];
var arr_length = getWidth() / scale;
for(var i = 0; i < arr_length; ++i)
{
    map[i] = [];
}

for(var c = scale/2; c <= getWidth(); c += scale)
{
    for(var d = scale/2; d <= getHeight(); d += scale)
    {
        map[((c+(scale/2))/scale) - 1][((d+(scale/2))/scale) - 1] = new Circle(scale/2);
        map[((c+(scale/2))/scale) - 1][((d+(scale/2))/scale) - 1].setPosition(c, d);
        map[((c+(scale/2))/scale) - 1][((d+(scale/2))/scale) - 1].setColor(Randomizer.nextColor());
    }
}

for(var e = 0; e < map.length; e++)
{
    for(var f = 0; f < map[e].length; f++)
    {
        add(map[e][f]);
    }
}

var shape = new Rectangle(scale, scale);
shape.setPosition(startX, startY);
shape.setColor(playerColor);
add(shape);

for(var a = 0; a <= getWidth(); a += scale)
{
    var temp = new Line(a, 0, a, getHeight());
    add(temp);
}

for(var b = 0; b <= getHeight(); b += scale)
{
    var temp = new Line(0, b, getWidth(), b);
    add(temp);
}

function start()
{
    keyDownMethod(keyDown, shape);
}

function keyDown(e)
{
    if(e.keyCode == Keyboard.LEFT)
    {
        if(shape.getX() > 0)
        {
            if(map[(shape.getX() / scale) - 1][(shape.getY() / scale)].getColor() != playerColor)
            {
                map[shape.getX() / scale][shape.getY() / scale].setColor(playerColor);
                shape.move(-scale, 0);
            }
        }
	}
	if(e.keyCode == Keyboard.UP)
    {
		if(shape.getY() > 0)
        {
            if(map[(shape.getX() / scale)][(shape.getY() / scale) - 1].getColor() != playerColor)
            {
                map[shape.getX() / scale][shape.getY() / scale].setColor(playerColor);
                shape.move(0, -scale);
            }
        }
	}
	if(e.keyCode == Keyboard.RIGHT)
    {
		if(shape.getX() < getWidth() - scale)
        {
            if(map[(shape.getX() / scale) + 1][(shape.getY() / scale)].getColor() != playerColor)
            {
                map[shape.getX() / scale][shape.getY() / scale].setColor(playerColor);
                shape.move(scale, 0);
            }
        }
	}
	if(e.keyCode == Keyboard.DOWN)
    {
		if(shape.getY() < getHeight() - scale)
        {
            if(map[(shape.getX() / scale)][(shape.getY() / scale) + 1].getColor() != playerColor)
            {
                map[shape.getX() / scale][shape.getY() / scale].setColor(playerColor);
                shape.move(0, scale);
            }
        }
	}
}


    if (typeof start === 'function') {
        start();
    }
};
</script>

</body>
</html>
